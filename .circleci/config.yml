version: 2.1

jobs:
  get_last_deployment_id:
    docker:
      - image: amazon/aws-cli
    steps:
      - run: yum install -y tar
      - run: yum install -y gzip
      - run: |
          aws cloudformation \
          list-exports --query "Exports[?Name==\`PipelineID\`].Value" \
          --no-paginate --output text >> ~/oldPipelineId.txt
          cat ~/oldPipelineId.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - oldPipelineId.txt  

  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          aws cloudformation deploy \
            --template-file bucket.yml \
            --stack-name "wf-${CIRCLE_WORKFLOW_ID:0:7}" \
            --parameter-overrides NAME="wf-${CIRCLE_WORKFLOW_ID:0:7}"
      - run: aws s3 sync . s3://"wf-${CIRCLE_WORKFLOW_ID:0:7}" --delete

  promote_to_production:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          aws cloudformation deploy \
            --template-file cloudfront.yml \
            --stack-name production-distro \
            --parameter-overrides PipelineID="wf-${CIRCLE_WORKFLOW_ID:0:7}"

  clean_up_old_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - run: yum install -y tar
      - run: yum install -y gzip    
      - attach_workspace:
          at: ~/
      - run: |
          oldPipelineId=$(cat oldPipelineId.txt)
          aws s3 rm s3://${oldPipelineID} --recursive
          aws cloudformation delete-stack --stack-name ${oldPipelineID}

workflows:
  my_workflow:
    jobs:
      - get_last_deployment_id
      - create_and_deploy_front_end:
          requires: [get_last_deployment_id]
      - promote_to_production:
          requires: [create_and_deploy_front_end]
      - clean_up_old_front_end:
          requires: [promote_to_production]
